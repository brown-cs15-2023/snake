Snake README

Overview:
    My Snake app has a snake that moves across a grid of squares and changes
    directions via the arrow keys (up/down/left/right). The goal is for the
    snake to eat pellet, represented by circles, from the squares. When the
    snake eats a pellet, the snake grows one square in length and another pellet
    is spawned in a random location on the board. The game ends when the snake
    moves into itself or moves off screen.

Design Choices:
    For the graphical design, I chose to use a BorderPane so that I could have
    one main pane in the center that displays the game, and an HBox on the bottom
    that holds the quit button and the score label. I chose to delegate to a
    ScoreController class to track the score and update the label, so that the
    Game class has one less element to deal with. Thus, I associate the gamePane
    and ScoreController with the Game so it can add elements graphically and update
    the score.

    I created a PicnicTile class as a wrapper class for a JavaFX Rectangle to
    model one square on the board. I have an enum called TileContents that's
    used by the PicnicTile to denote whether that tile is empty, has snake, or
    has food. I then represent the board as a 2d array PicnicTile[][] since the
    board is laid out as a grid. I have a Food class that wraps the Circle
    and is used to add food to the tiles.

    I also have a Snake class that's a wrapper for an ArrayList of Rectangles
    that model the snake moving across the board. It uses an enum for the
    Direction in which the snake is moving. I associate the board of PicnicTile[][]
    with the Snake so that it can have access to the PicnicTiles that it moves
    across and can see if they have food or snake.

Known Bugs: None

Debugging Collaborators: dsegel, usodhi

Hours Spent: 22 Hours